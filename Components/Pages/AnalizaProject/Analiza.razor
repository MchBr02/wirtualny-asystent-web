@page "/Analiza"
@using ApexCharts
@using Client_ui.Domain.DTO
@using Client_ui.Service
@using System.Linq
@inject IChartService ChartService
@inject IAuthService AuthService
<MudGrid>
    <MudItem xs="12" md="9" lg="8">
        <ApexChart TItem="ChartData"
                   Title="Liczba Treningów w miesiącu">
            <ApexPointSeries TItem="ChartData"
                             Items="monthlyData"
                             Name="Ilość Treningów"
                             SeriesType="SeriesType.Bar"
                             XValue="e => e.Month"
                             YValue="e => e.Count" />
        </ApexChart>
    </MudItem>
</MudGrid>
<MudGrid Class="mt-8">
    <MudItem xs="12" md="9" lg="8">
        <ApexChart TItem="ChartDataWithVolume"
                   Title="Objętość treningów w miesiącu">
            <ApexPointSeries TItem="ChartDataWithVolume"
                             Items="volumeData"
                             Name="Objętość (kg)"
                             SeriesType="SeriesType.Bar"
                             XValue="e => e.Month"
                             YValue="e => e.Volume" />
        </ApexChart>
    </MudItem>
</MudGrid>
@code {
    private List<ChartData> monthlyData = new();
    private List<ChartDataWithVolume> volumeData = new();

    protected override async Task OnInitializedAsync()
    {
        var userId = await AuthService.GetCurrentUserIdAsync();

        if (userId.HasValue)
        {
            // Pobierz dane wykresu dla aktualnego użytkownika
            monthlyData = (await ChartService.GetAllWorkoutsInMonth(userId.Value)).ToList();
            volumeData = (await ChartService.GetAllWorkoutsInMonthWithVolume(userId.Value)).ToList();
        }
        else
        {
            // Użytkownik nie jest zalogowany lub nie ma ID
            monthlyData = new List<ChartData>();
            volumeData = new List<ChartDataWithVolume>();
        }
    }
}