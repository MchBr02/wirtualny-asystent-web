@page "/"
@using Client_ui.Components.Authorization
@using Client_ui.Components.Authorization.Contracts
@using Client_ui.Service
@using System.Security.Claims
@inject AuthService LoginService
@inject CustomAuthenticationService AuthService

<MudPaper Class="pa-4 ma-4 d-flex flex-column" MaxWidth="500px" Elevation="3">
    <MudText Typo="Typo.h5" Class="mb-4">Login</MudText>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <MudAlert Severity="Severity.Error" Class="mb-3">@errorMessage</MudAlert>
    }

    <MudTextField @bind-Value="userIdentifier"
                  Label="Username"
                  Variant="Variant.Outlined"
                  Class="mb-3"
                  Adornment="Adornment.Start"
                  AdornmentIcon="@Icons.Material.Filled.Person" />

    <MudTextField @bind-Value="userPassword"
                  Label="Password"
                  Variant="Variant.Outlined"
                  InputType="InputType.Password"
                  Class="mb-4"
                  Adornment="Adornment.Start"
                  AdornmentIcon="@Icons.Material.Filled.Lock" />

    <MudButton Variant="Variant.Filled"
               Color="Color.Primary"
               OnClick="SignIn"
               FullWidth="true"
               Class="mb-2">
        Sign In
    </MudButton>
</MudPaper>

<MudPaper Class="pa-4 ma-4 d-flex flex-column" MaxWidth="500px" Elevation="3">
    <AuthorizeView>
        <Authorized>
            <MudText>You're logged in as <b>@context.User.Identity?.Name</b></MudText>
            <div class="mt-3">
                <MudButton Variant="Variant.Outlined"
                           Color="Color.Secondary"
                           OnClick="SignOut"
                           StartIcon="@Icons.Material.Filled.Logout">
                    Sign Out
                </MudButton>
            </div>
        </Authorized>
        <NotAuthorized>
            <MudAlert Severity="Severity.Info" Variant="Variant.Filled">
                You're not authorized. Please sign in.
            </MudAlert>
        </NotAuthorized>
    </AuthorizeView>
</MudPaper>

@code {
    public string userIdentifier = string.Empty;
    public string userPassword = string.Empty;
    private string errorMessage = string.Empty;

    private async Task SignIn()
    {
        try
        {
            // Create auth request using the form data
            var authRequest = new AuthRequest
                {
                    Username = userIdentifier,
                    Password = userPassword
                };

            // Call the login service
            await LoginService.Login(authRequest);

            // Clear the fields and error message after successful login
            userIdentifier = string.Empty;
            userPassword = string.Empty;
            errorMessage = string.Empty;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private void SignOut()
    {
        LoginService.Logout();
        errorMessage = string.Empty;
    }
}